import streamlit as st
import pickle
import pandas as pd
import numpy as np
from scipy.sparse import hstack



st.title("Network Attacks ")
st.header('Prediction')
st.image("1.png")


# loading models


model = pickle.load(open('model.pkl', 'rb'))

V1 = pickle.load(open('vectorizer1.pkl', 'rb'))

V2  = pickle.load(open('vectorizer3.pkl', 'rb'))









st.subheader('Enter the details:')



with st.form("my_form"):

    protocol_type = st.radio('protocol type:', ('tcp', 'icmp', 'udp'), index=2)

    flag = st.radio('flag:', ('REJ', 'SF', 'RSTR', 'S0', 'OTH', 'RSTOS0', 'S2', 'RSTO', 'S1'), index=2)

    dst_host_srv_diff_host_rate = st.number_input('dst host srv diff host rate :', min_value=0, max_value=1, value=1)
    dst_host_count = st.number_input('dst host count :', min_value=0, max_value=225, value=225)
    diff_srv_rate = st.number_input('diff srv rate :',  min_value=0, max_value=1, value=1)
    src_bytes = st.number_input('src bytes :', min_value=0, max_value=54540, value=8)
    same_srv_rate = st.number_input('same srv rate :', min_value=0, max_value=1, value=1)
    count = st.number_input('count :', min_value=0, max_value=511, value=235)
    dst_host_same_src_port_rate = st.number_input('dst host same src por trate :', min_value=0, max_value=1, value=1)
    serror_rate = st.number_input('serror rate :', min_value=0, max_value=1, value=1)

    submitted = st.form_submit_button("Predict")


if submitted:
    protocol_type = np.array(protocol_type).reshape(1, -1)
    flag = np.array(flag).reshape(1, -1)
    dst_host_srv_diff_host_rate = np.array(dst_host_srv_diff_host_rate).reshape(1, -1)
    dst_host_count = np.array(dst_host_count).reshape(1, -1)
    diff_srv_rate = np.array(diff_srv_rate).reshape(1, -1)
    src_bytes = np.array(src_bytes).reshape(1, -1)
    same_srv_rate = np.array(same_srv_rate).reshape(1, -1)
    count = np.array(count).reshape(1, -1)
    dst_host_same_src_port_rate = np.array(dst_host_same_src_port_rate).reshape(1, -1)
    serror_rate = np.array(serror_rate).reshape(1, -1)

    protocol_type =  V1.transform(protocol_type.ravel())
    flag  = V2.transform(flag.ravel())

    input = hstack((protocol_type, flag, dst_host_srv_diff_host_rate, dst_host_count, diff_srv_rate, src_bytes, same_srv_rate,count,dst_host_same_src_port_rate,serror_rate)).tocsr()
    predict = model.predict(input)
    output = ['back.', 'ipsweep.', 'normal.', 'portsweep.', 'satan.']

    output_string = "The Predicted Network attack is: " + output[predict[0]]

    st.warning(output_string)

















